// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// model Organization {
//   id           Int      @id @default(autoincrement())
//   name         String
//   ghanaPostGPS String   @unique @map("ghana_post_gps")
//   createdAt    DateTime @default(now()) @map("created_at")
//   updatedAt    DateTime @default(now()) @map("updated_at")
//   phoneNumber  String   @unique @map("phone_number")
//   email        String   @unique
//   users        User[]
//   branches     Branch[]

//   @@map("organizations")
// }

model User {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  title       String?
  email       String  @unique
  phoneNumber String  @map("phone_number")
  hash        String
  // roles         Role[]
  // organizations Organization[]
  // permissions   Permissions[]
  // branches      Branch[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt
  Role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?

  @@map("users")
}

model Role {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name Roles  @unique()

  users User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  // Permissions Permissions[]

  @@map("roles")
}

enum BranchType {
  HEAD_OFFICE
  SUB
}

model Branch {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  type         BranchType
  ghanaPostGPS String     @unique
  // organization_id String
  // organization    Organization @relation(fields: [organization_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  phoneNumber  String?
  // users           User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("branches")
}

// model Permissions {
//   id     Int    @id @default(autoincrement())
//   name   String
//   role   Role?  @relation(fields: [roleId], references: [id])
//   roleId Int?   @map("role_id")
//   user   User?  @relation(fields: [userId], references: [id])
//   userId Int?   @map("user_id")

// }
enum Roles {
  SUPER_ADMIN
  BACKOFFICE_ADMIN
  MEMBER
  TRAINER
}

model SubscriptionPackages {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  amount    Float
  createdBy String
  Member    Member[]
}

model Member {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  foreNames   String
  lastName    String
  phoneNumber String @unique
  idNumber    String @unique
  createdBy   String

  subscriptions          SubscriptionPackages @relation(fields: [subscriptionPackagesId], references: [id])
  subscriptionPackagesId String               @db.ObjectId

  @@map("members")
}

model Admin {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  email       String @unique
  phoneNumber String @unique
  hash        String
  foreNames   String
  lastName    String

  @@map("admins")
}
